import React from 'react';
import { NavigationContainer } from '@react-navigation/native';
import { createStackNavigator } from '@react-navigation/stack';
import HomeScreen from './HomeScreen';
import GradesScreen from './GradesScreen';
import { StyleSheet } from 'react-native';

const Stack = createStackNavigator();

const App = () => (
  <NavigationContainer>
    <Stack.Navigator initialRouteName="Home">
      <Stack.Screen name="Home" component={HomeScreen} />
      <Stack.Screen name="Grades" component={GradesScreen} />
    </Stack.Navigator>
  </NavigationContainer>
);

function LoginScreen() {
  return (
    <TouchableWithoutFeedback onPress={Keyboard.dismiss}> 
    <View style={styles.container}>
      <Text style={styles.text}>Hello React World!</Text>
    </View>
    </TouchableWithoutFeedback>
  );
}

function Grades({ navigation, cList }) {
  return (
    <TouchableWithoutFeedback onPress={Keyboard.dismiss}>
    <SafeAreaView style={[styles.container, styles.classText]}>
      {cList.length > 0 ? (
        cList.map((classItem, index) => (
          <View key={index}>
            <Text>{classItem.className || "No Class Name"}</Text>
          </View>
        ))
      ) : (
        <Text>No classes added yet.</Text>
      )}
      <Pressable
        style={styles.backButton}
        onPress={() => navigation.goBack()}
      >
        <Image
          style={styles.backButtonImage}
          source={require('./assets/backButton.jpeg')}
        />
      </Pressable>
      <Pressable
        style={styles.addButton}
        onPress={() => {
          navigation.navigate('Add Class', { classList: cList }); // Pass classList correctly
        }}
      >
        <Image
          style={styles.addButtonImage}
          source={require('./assets/addButton.jpeg')}
        />
      </Pressable>
    </SafeAreaView>
  </TouchableWithoutFeedback>
);
}
function AddClass({ navigation, setClassList, route }) {
  const { classList } = route.params; // Receive classList from navigation parameters
  const [className, setClassName] = useState('');

  function Class(className) {
    this.className = className;
  }

  const handleSaveClass = () => {
    if (!className) {
      Alert.alert("Error", "Please fill in all fields.");
      return;
    }
    const newClass = new Class(className);
    // Check for duplicates
    if (classList.some(cls => cls.className === className)) {
      Alert.alert("Error", "This class already exists.");
      return;
    }
    setClassList((prevClassList) => [...prevClassList, newClass]);
    setClassName('');
    navigation.navigate('Grades');
    console.log("New class added:", newClass);
  };

  return (
    <View style={styles.container}>
      <Text style={styles.addClassText}>Add Class!</Text>

      {/* Class Name Input */}
      <Text style={styles.label}>Class Name:</Text>
      <TextInput
        style={styles.textInput}
        placeholder="Enter Class Name"
        placeholderTextColor="#888"
        onChangeText={(val) => setClassName(val)}
        value={className}
      />
    
      {/* Footer Buttons */}
      <View style={styles.footerContainerAddClass}>
        <CustomButton
          title="Save"
          onPress={handleSaveClass}
          backgroundColor={colors.darkOrange}
          style={[styles.button, styles.saveButton]}
        />
        <CustomButton
          title="Cancel"
          onPress={() => navigation.navigate('Grades')}
          backgroundColor={colors.darkOrange}
          style={[styles.button, styles.cancelButton]}
        />
          <CustomButton
          title="Add Assignment"
          onPress={handleSaveClass}
          backgroundColor={colors.darkOrange}
          style={[styles.button, styles.saveButton]}
        />

      </View>
    </View>
  );
}

function ExistingClass() {
  return (
    <View style={styles.container}>
      <Text style={styles.text}>Hello React World!</Text>
    </View>
  );
}

function AddAssignments({ navigation }) {
  const [assignmentTitle, setAssignmentTitle] = useState('');
  const [dueDate, setDueDate] = useState('');

  return (
    <TouchableWithoutFeedback onPress={Keyboard.dismiss}>
      <SafeAreaView style={styles.container}>
        <Pressable style={styles.backButton} onPress={() => navigation.goBack()}>
          <Image style={styles.backButtonImage} source={require('./assets/backButton.jpeg')} />
        </Pressable>
        <Text style={styles.addClassText}>Add Assignments!</Text>
        
        <Text style={styles.label}>Assignment Title:</Text>
        <TextInput
          style={styles.textInput}
          placeholder="Enter Assignment Title"
          placeholderTextColor="#888"
          onChangeText={setAssignmentTitle}
          value={assignmentTitle}
        />

        <Text style={styles.label}>Due Date:</Text>
        <TextInput
          style={styles.textInput}
          placeholder="Enter Due Date"
          placeholderTextColor="#888"
          onChangeText={setDueDate}
          value={dueDate}
        />

        <SafeAreaView style={styles.footerContainerAddClass}>
          <CustomButton
            title="Save"
            onPress={() => {
              // Implement save functionality here
              navigation.navigate('Grades');
            }}
            backgroundColor={colors.darkOrange}
          />
          <CustomButton
            title="Cancel"
            onPress={() => navigation.navigate('Grades')}
            backgroundColor={colors.darkOrange}
          />
        </SafeAreaView>
      </SafeAreaView>
    </TouchableWithoutFeedback>
  );
}


function CustomButton({ title, onPress, backgroundColor }) {
  return (
    <TouchableOpacity
      style={[styles.buttonWrapper, { backgroundColor }]}
      onPress={onPress}
    >
      <Text style={styles.buttonText}>{title}</Text>
    </TouchableOpacity>
  );
}
const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: colors.darkBlack,
  },
  logo: {
    width: 200,
    height: 200,
    top: -100,
  },
  addButtonImage: {
    width: '100%',
    height: '100%',
  },
  addButton: {
    width: 55,
    height: 55,
    position: 'absolute',
    bottom: 700,
    right: 20,
  },
  backButton: {
    position: 'absolute',
    top: 60,
    left: 20,
    width: 90,
    height: 50,
  },
  backButtonImage: {
    width: '100%',
    height: '100%',
  },
  textHome: {
    fontSize: 40,
    fontWeight: 'bold',
    color: colors.darkPeriwinkle || 'blue',
    textAlign: 'center',
    marginVertical: 10,
    top: -100,
    fontFamily: 'Nosifer-Regular', // Set the font family here
  },
  text: {
    fontSize: 18,
    fontWeight: 'bold',
    color: colors.darkPeriwinkle || 'blue',
    textAlign: 'center',
    marginVertical: 10,
    top: -100,
    fontFamily: 'Nosifer-Regular', // Set the font family here
  },
  classText: {
    fontSize: 18,
    color: colors.white,
  },
  footerContainer: {
    position: 'absolute',
    bottom: 20,
    width: '100%',
    paddingHorizontal: 20,
  },
  buttonWrapper: {
    marginVertical: 5,
    borderRadius: 8,
    paddingVertical: 15,
    alignItems: 'center',
  },
  addClassText: {
    fontSize: 18,
    fontWeight: 'bold',
    color: colors.darkPeriwinkle || 'blue',
    textAlign: 'center',
    marginVertical: 10,
    top: -350,
    fontFamily: 'Nosifer-Regular', // Set the font family here
  },
  buttonText: {
    color: 'white',
    fontSize: 18,
    fontWeight: 'bold',
    fontFamily: 'Nosifer-Regular', // Set the font family here
  },
  label: {
      alignSelf: 'flex-start',
      fontSize: 18,
      color: colors.darkPeriwinkle || 'blue',
      fontFamily: 'Nosifer-Regular',
      marginTop: 10,
    },
    textInput: {
      width: '100%',
      height: 50,
      borderColor: '#ccc',
      borderWidth: 1,
      borderRadius: 8,
      paddingHorizontal: 10,
      marginBottom: 15,
      fontFamily: 'Nosifer-Regular',
      color: 'white',
    },
});